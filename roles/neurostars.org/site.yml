---
- name: Deploy neurostars.org Django website, PostgreSQL, Nginx, uWSGI
  hosts: all
  user: root
  gather_facts: no

  roles:
    - ../common
    - ../nginx
    - ../uwsgi
    - ../postgresql

  tasks:
    - name: "Set the hostname"
      shell: hostname {{ hostname }}

    - name: "Configure postgresql"
      sudo: yes
      sudo_user: postgres
      include: tasks/postgresql.yml

    - name: "Clone the website from GitHub"
      git: repo=https://github.com/brainstorm/biostar-central 
            dest={{ site_prefix }}/{{ hostname }}
            version={{ hostname }}

    - name: "Fix permissions for website"
      file: path={{ site_prefix }}/{{ hostname }} state=directory owner=www-data group=www-data recurse=true

    - name: "Copy production settings.py file"
      template: src=templates/settings.py.j2 dest={{ site_prefix }}/{{ hostname }}/main/settings.py owner=www-data group=www-data

    - name: "Install virtualenv"
      action: pip name={{ item }} state=present
      with_items:
          - virtualenv

    - name: "Install site dependencies on the virtualenv"
      pip: requirements={{ site_prefix }}/{{ hostname }}/requirements.txt virtualenv={{ site_prefix }}/{{ hostname }}/.venv
    
    - name: "Install postgresql support for python"
      pip: name=psycopg2 virtualenv={{ site_prefix }}/{{ hostname }}/.venv

    - name: "Copy Nginx neurostars.org template"
      template: src=templates/nginx.conf.j2 dest=/etc/nginx/nginx.conf

    - name: "Copy uWSGI template to emperor vassals"
      template: src=templates/uwsgi.ini.j2 dest=/etc/uwsgi/vassals/neurostars.org.ini
      notify: restart the uwsgi emperor

    - name: "External mountpoint for static files, ensure it is created and present"
      file: path=/mnt/static owner=www-data group=www-data state=directory
    
    # XXX: Not sure if this practice is acceptable
    - name: "Symlink to static files"
      file: state=link src=/mnt/static dest={{ site_prefix }}/{{ hostname }}/static

    - name: "Setup the django site, syncdb, collectstatic and migrate"
      action: django_manage command={{ item }} 
                            app_path={{ site_prefix }}/{{ hostname }}
                            settings={{ site_prefix }}/{{ hostname }}
                            virtualenv={{ site_prefix }}/{{ hostname }}/.venv
                            settings=main.settings
                            #pythonpath={{ site_prefix }}/{{ hostname }}
      with_items:
          - collectstatic
          # XXX: The next fail with "No module named server.const
          # - syncdb
          # - migrate
